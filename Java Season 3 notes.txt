

********************************************
Project Management Tool
********************************************

Maven 


apache community 

https://maven.apache.org/download.cgi


Downloading Apache Maven 3.9.9

apache-maven-3.9.9-bin.zip

how to configure maven :

MAVEN_HOME  D:\012Livetech\jars\apache-maven-3.9.9-bin\apache-maven-3.9.9
M2_HOME  D:\012Livetech\jars\apache-maven-3.9.9-bin\apache-maven-3.9.9\bin
path D:\012Livetech\jars\apache-maven-3.9.9-bin\apache-maven-3.9.9\bin

how to check maven is installed and configure ?

C:\Users\Riyaz>mvn -version
Apache Maven 3.9.9 (8e8579a9e76f7d015ee5ec7bfcdc97d260186937)
Maven home: D:\010LiveTech\jars\apache-maven-3.9.9-bin\apache-maven-3.9.9
Java version: 11.0.24, vendor: Oracle Corporation, runtime: C:\Program Files\Java\jdk-11
Default locale: en_IN, platform encoding: Cp1252
OS name: "windows 11", version: "10.0", arch: "amd64", family: "windows"



****************************************
Maven Project 

group id : common id used by all projects in an organization 


com.citibank 

Artifact id : is a specific project under group id 
e.g FrameworkAutomation 


src/main/java   ==> java stuf (for app developement)
src/main/resources ==> non-java ( javascripts , css file  etc..)
src/test/java   ==>java test cases (like junit test case etc ..)
src/test/resources ==> non-java stuff ( excel files , json files , properties etc ..)


target --> used by maven to store files related to project execution 

pom.xml --> project object model .xml 

https://mvnrepository.com/ 

<dependencies>   </dependencies>


*************************************
How to read and write to excel files 
*************************************

using Apache POI libraries 

org.apache.poi » poi

org.apache.poi » poi-ooxml

org.apache.poi » poi-scratchpad


			.xls										.xlsx

		HSSFWorkbook(C)			Workbook (I)  			XSSFWorkbook(C)
								
		HSSFShee(C)				Sheet (I)				XSSFSheet(C)
								
		HSSFRow(C)				Row (I)					XSSFRow(C)
								
		HSSFCell(C)				Cell (I) 				XSSFCell(C)
		
		
								
Microsoft Excel used the .xls file format until the 2007 version: 
Excel 97, 2000, 2002, and 2003: Used the .xls file format, which is the Excel Binary File Format (BIFF8) 
Excel 2007: Introduced the .xlsx file format, which is based on Office Open XML, and remained backwards-compatible with the .xls forma								



FileInputStream  (java.io)


FileInputStream(File)
FileInputStream(FileDescriptor)
FileInputStream(String) ==> this is prefered , here String is the location of file including extension 


XSSFWorkbook(C) (org.apache.poi.xssf.usermodel)



XSSFWorkbook(InputStream) ==> here InputStream is object of FileInputStream

getSheet(String):XSSFSheet  ==> String is sheet name 

XSSFSheet(C) :

getLastRowNum():int ==> this will return an int , where counting starts from zero

getRow(int):XSSFRow here int is index , index starts from zero 


--------------------------------
XSSFRow(c)

getLastCellNum():short , this will return an int , where counting starts from one 
getCell(int):XSSFCell , here int is index , index starts from zero 

------------------------------------------------
XSSFCell (c) :


getCellType():CellType

CellType is an enum simliar to interface which will have some constants 

NUMERIC

STRING

BOOLEAN

BLANK


getStringCellValue():String

getNumericCellValue():double

getBooleanCellValue():boolean



*************************************
Excel Write
**************************************


Case1 : modifying an existing cell 

Methods in XSSFCell


case 2: creating a cell in existing row 

case 3: creating a new row and cell in it 



***********************************
Properties File
***********************************

.properties

this will store key and value both in form of string 

browser=chrome
implicitWait=30


**************************************
HashMap (C)
**************************************

Map (I) - java.util

Entry<K, V> (I)

put(K, V):V

size():int 

entrySet():Set<Entry<K, V>>

keySet():Set<K>

values():Collection<V>

containsKey(Object):boolean

containsValue(Object):boolean

get(Object):Value

getKey():K
getValue():V 

------------------------------
HashMap()
HashMap(int)
HashMap(int, float)
HashMap(Map<? extends K, ? extends V>)


putIfAbsent(K, V):V 

